apiVersion: sqs.aws.upbound.io/v1beta1
kind: Queue
metadata:
  name: {{.Values.clusterName}}-karpenter
  namespace: {{.ReleaseNamespace}}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  providerConfigRef:
    name: {{.Values.clusterName}}
  forProvider:
    name: {{.Values.clusterName}}-karpenter
    tags:
      giantswarm.io/cluster: {{.Values.clusterName}}
      giantswarm.io/used-for: termination-handler
      sigs.k8s.io/cluster-api-provider-aws/cluster/{{.Values.clusterName}}: owned
    region: {{.Values.region}}
    messageRetentionSeconds: 300
---
apiVersion: sqs.aws.upbound.io/v1beta1
kind: QueuePolicy
metadata:
  name: {{.Values.clusterName}}-karpenter
  namespace: {{.ReleaseNamespace}}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  providerConfigRef:
    name: {{.Values.clusterName}}
  forProvider:
    region: {{.Values.region}}
    policy: |
      {
        "Version": "2012-10-17",
        "Id": "EC2InterruptionPolicy",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Service": [
                "events.amazonaws.com",
                "sqs.amazonaws.com"
              ]
            },
            "Action": "sqs:SendMessage",
            "Resource": "arn:{{.Values.awsPartition}}:sqs:{{.Values.region}}:{{.Values.accountID}}:{{.Values.clusterName}}-karpenter"
          }
        ]
      }
    queueUrlSelector:
      matchLabels:
        giantswarm.io/cluster: {{.Values.clusterName}}
        giantswarm.io/used-for: termination-handler
---
apiVersion: cloudwatchevents.aws.upbound.io/v1beta1
kind: Rule
metadata:
  name: {{.Values.clusterName}}-karpenter-health
  namespace: {{.ReleaseNamespace}}
  labels:
    {{- include "labels.common" . | nindent 4 }}
    giantswarm.io/cluster: {{.Values.clusterName}}
    giantswarm.io/used-for: karpenter-health
spec:
  providerConfigRef:
    name: {{.Values.clusterName}}
  forProvider:
    tags:
      giantswarm.io/cluster: {{.Values.clusterName}}
      sigs.k8s.io/cluster-api-provider-aws/cluster/{{.Values.clusterName}}: owned
    region: {{.Values.region}}
    eventBusName: default
    eventPattern: |
      {
        "source": [
          "aws.health"
        ],
        "detail-type": [
          "AWS Health Event"
        ]
      }
---
apiVersion: cloudwatchevents.aws.upbound.io/v1beta1
kind: Rule
metadata:
  name: {{.Values.clusterName}}-karpenter-spotinterruption
  namespace: {{.ReleaseNamespace}}
  labels:
    {{- include "labels.common" . | nindent 4 }}
    giantswarm.io/cluster: {{.Values.clusterName}}
    giantswarm.io/used-for: karpenter-spotinterruption
spec:
  providerConfigRef:
    name: {{.Values.clusterName}}
  forProvider:
    tags:
      giantswarm.io/cluster: {{.Values.clusterName}}
      sigs.k8s.io/cluster-api-provider-aws/cluster/{{.Values.clusterName}}: owned
    region: {{.Values.region}}
    eventBusName: default
    eventPattern: |
      {
        "source": [
          "aws.ec2"
        ],
        "detail-type": [
          "EC2 Spot Instance Interruption Warning"
        ]
      }
---
apiVersion: cloudwatchevents.aws.upbound.io/v1beta1
kind: Rule
metadata:
  name: {{.Values.clusterName}}-karpenter-rebalance
  namespace: {{.ReleaseNamespace}}
  labels:
    {{- include "labels.common" . | nindent 4 }}
    giantswarm.io/cluster: {{.Values.clusterName}}
    giantswarm.io/used-for: karpenter-rebalance
spec:
  providerConfigRef:
    name: {{.Values.clusterName}}
  forProvider:
    tags:
      giantswarm.io/cluster: {{.Values.clusterName}}
      sigs.k8s.io/cluster-api-provider-aws/cluster/{{.Values.clusterName}}: owned
    region: {{.Values.region}}
    eventBusName: default
    eventPattern: |
      {
        "source": [
          "aws.ec2"
        ],
        "detail-type": [
          "EC2 Instance Rebalance Recommendation"
        ]
      }
---
apiVersion: cloudwatchevents.aws.upbound.io/v1beta1
kind: Rule
metadata:
  name: {{.Values.clusterName}}-karpenter-statechange
  namespace: {{.ReleaseNamespace}}
  labels:
    {{- include "labels.common" . | nindent 4 }}
    giantswarm.io/cluster: {{.Values.clusterName}}
    giantswarm.io/used-for: karpenter-statechange
spec:
  providerConfigRef:
    name: {{.Values.clusterName}}
  forProvider:
    tags:
      giantswarm.io/cluster: {{.Values.clusterName}}
      sigs.k8s.io/cluster-api-provider-aws/cluster/{{.Values.clusterName}}: owned
    region: {{.Values.region}}
    eventBusName: default
    eventPattern: |
      {
        "source": [
          "aws.ec2"
        ],
        "detail-type": [
          "EC2 Instance State-change Notification"
        ]
      }
---
apiVersion: cloudwatchevents.aws.upbound.io/v1beta1
kind: Target
metadata:
  name: {{.Values.clusterName}}-health
  namespace: {{.ReleaseNamespace}}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  providerConfigRef:
    name: {{.Values.clusterName}}
  forProvider:
    arn: arn:{{.Values.awsPartition}}:sqs:{{.Values.region}}:{{.Values.accountID}}:{{.Values.clusterName}}-karpenter
    region: {{.Values.region}}
    eventBusName: default
    targetId: karpenter
    ruleSelector:
      matchLabels:
        giantswarm.io/cluster: {{.Values.clusterName}}
        giantswarm.io/used-for: karpenter-health
---
apiVersion: cloudwatchevents.aws.upbound.io/v1beta1
kind: Target
metadata:
  name: {{.Values.clusterName}}-spotinterruption
  namespace: {{.ReleaseNamespace}}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  providerConfigRef:
    name: {{.Values.clusterName}}
  forProvider:
    arn: arn:{{.Values.awsPartition}}:sqs:{{.Values.region}}:{{.Values.accountID}}:{{.Values.clusterName}}-karpenter
    region: {{.Values.region}}
    eventBusName: default
    targetId: karpenter
    ruleSelector:
      matchLabels:
        giantswarm.io/cluster: {{.Values.clusterName}}
        giantswarm.io/used-for: karpenter-spotinterruption
---
apiVersion: cloudwatchevents.aws.upbound.io/v1beta1
kind: Target
metadata:
  name: {{.Values.clusterName}}-rebalance
  namespace: {{.ReleaseNamespace}}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  providerConfigRef:
    name: {{.Values.clusterName}}
  forProvider:
    arn: arn:{{.Values.awsPartition}}:sqs:{{.Values.region}}:{{.Values.accountID}}:{{.Values.clusterName}}-karpenter
    region: {{.Values.region}}
    eventBusName: default
    targetId: karpenter
    ruleSelector:
      matchLabels:
        giantswarm.io/cluster: {{.Values.clusterName}}
        giantswarm.io/used-for: karpenter-rebalance
---
apiVersion: cloudwatchevents.aws.upbound.io/v1beta1
kind: Target
metadata:
  name: {{.Values.clusterName}}-statechange
  namespace: {{.ReleaseNamespace}}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  providerConfigRef:
    name: {{.Values.clusterName}}
  forProvider:
    arn: arn:{{.Values.awsPartition}}:sqs:{{.Values.region}}:{{.Values.accountID}}:{{.Values.clusterName}}-karpenter
    region: {{.Values.region}}
    eventBusName: default
    targetId: karpenter
    ruleSelector:
      matchLabels:
        giantswarm.io/cluster: {{.Values.clusterName}}
        giantswarm.io/used-for: karpenter-statechange